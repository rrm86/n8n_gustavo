{
  "name": "Gustavo-Aula-4-no-credentials",
  "nodes": [
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        440,
        -300
      ],
      "id": "6d2cfb66-6ca1-4ca8-8b35-ee89a1dec496",
      "name": "Split Out"
    },
    {
      "parameters": {
        "content": "## Extração, Transformação e Load\n",
        "height": 680,
        "width": 1080
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        -480
      ],
      "id": "e3757f7e-6937-4c7a-aeed-4598f083bb22",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "url": "https://stedileadvocacia.digisac.co/api/v1/contacts",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "perPage",
              "value": "20000"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        -300
      ],
      "id": "2fab4445-85a0-4f18-9ec9-f4fad28ffa1a",
      "name": "HTTP Request - Contatos"
    },
    {
      "parameters": {
        "url": "https://stedileadvocacia.digisac.co/api/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "perPage",
              "value": "1000"
            },
            {
              "name": "page",
              "value": "={{ $json.value }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        -60
      ],
      "id": "a4704798-4837-41a0-84ef-0bfe3f405a80",
      "name": "HTTP Request - Mensages"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        660,
        -60
      ],
      "id": "fc918418-8577-4360-998d-947ce8a78be1",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "gustavo_contatos",
          "mode": "list",
          "cachedResultName": "gustavo_contatos"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "block": false,
            "id": "={{ $json.id }}",
            "note": "={{ $json.note }}",
            "last_message_at": "={{ $json.lastMessageAt }}",
            "created_at": "={{ $json.createdAt }}",
            "id_from_service": "={{ $json.idFromService }}",
            "name": "={{ $json.name }}",
            "internal_name": "={{ $json.internalName }}",
            "alternative_name": "={{ $json.alternativeName }}",
            "phone_number": "={{ $json.data.number }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "note",
              "displayName": "note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_message_at",
              "displayName": "last_message_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "block",
              "displayName": "block",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "id_from_service",
              "displayName": "id_from_service",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "internal_name",
              "displayName": "internal_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "alternative_name",
              "displayName": "alternative_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "phone_number",
              "displayName": "phone_number",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        820,
        -300
      ],
      "id": "2853c926-55e4-4e3c-8b80-33ab60583cd3",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "VbnQqtUWDR4FCCoO",
          "name": "[SIMPLEWORK]Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "gustavo_mensagens",
          "mode": "list",
          "cachedResultName": "gustavo_mensagens"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "is_from_me": "={{ $json.isFromMe }}",
            "sent": "={{ $json.sent }}",
            "is_from_bot": "={{ $json.isFromBot }}",
            "is_comment": "={{ $json.isComment }}",
            "id": "={{ $json.id }}",
            "type": "={{ $json.type }}",
            "timestamp": "={{ $json.timestamp }}",
            "text": "={{ $json.text }}",
            "contact_id": "={{ $json.contactId }}",
            "from_id": "={{ $json.fromId }}",
            "service_id": "={{ $json.serviceId }}",
            "created_at": "={{ $json.createdAt }}",
            "updated_at": "={{ $json.updatedAt }}",
            "quoted_message_id": "={{ $json.quotedMessage }}",
            "files": "={{ $json.files }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "is_from_me",
              "displayName": "is_from_me",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "sent",
              "displayName": "sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "timestamp",
              "displayName": "timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "from_id",
              "displayName": "from_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "service_id",
              "displayName": "service_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "quoted_message_id",
              "displayName": "quoted_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "files",
              "displayName": "files",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": false
            },
            {
              "id": "is_from_bot",
              "displayName": "is_from_bot",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "is_comment",
              "displayName": "is_comment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        840,
        -60
      ],
      "id": "3fb024fc-fc9f-4a6f-a4da-8a7bd7d67086",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "VbnQqtUWDR4FCCoO",
          "name": "[SIMPLEWORK]Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    c.id AS id_usuario,\n    REGEXP_REPLACE(c.name, '[^a-zA-Z0-9áàâãéèêíìîóòôõúùûçÁÀÂÃÉÈÊÍÌÎÓÒÔÕÚÙÛÇ\\s]', '', 'g') AS nome_usuario,\n    c.phone_number AS telefone,\n    m.text AS mensagem,\n    m.timestamp AS data_hora,\n    CASE \n        WHEN m.is_from_me THEN 'Enviada' \n        ELSE 'Recebida' \n    END AS tipo_mensagem\nFROM \n    gustavo_contatos c\nJOIN \n    gustavo_mensagens m ON c.id = m.contact_id\nWHERE \n    c.block = FALSE\nORDER BY \n    c.name DESC,\n    m.timestamp ASC;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1460,
        560
      ],
      "id": "6f6e48de-3a42-4d40-ad5a-5b922dc31081",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "VbnQqtUWDR4FCCoO",
          "name": "[SIMPLEWORK]Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    c.id AS id_usuario,\n    REGEXP_REPLACE(c.name, '[^a-zA-Z0-9áàâãéèêíìîóòôõúùûçÁÀÂÃÉÈÊÍÌÎÓÒÔÕÚÙÛÇ\\s]', '', 'g') AS nome_usuario,\n    c.phone_number AS telefone,\n    JSON_AGG(\n        JSON_BUILD_OBJECT(\n            'mensagem', m.text,\n            'data_hora', m.timestamp,\n            'tipo', CASE WHEN m.is_from_me THEN 'Enviada' ELSE 'Recebida' END\n        ) ORDER BY m.timestamp ASC\n    ) AS mensagens\nFROM \n    gustavo_contatos c\nLEFT JOIN \n    gustavo_mensagens m ON c.id = m.contact_id\nWHERE \n    c.block = FALSE\n    AND m.text IS NOT NULL\nGROUP BY \n    c.id, c.name, c.phone_number\nORDER BY \n    nome_usuario \nLIMIT 2;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1460,
        340
      ],
      "id": "2ed61c46-d191-4f30-b1ed-2421caa1f096",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "VbnQqtUWDR4FCCoO",
          "name": "[SIMPLEWORK]Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1720,
        340
      ],
      "id": "6cdc6b6a-87ad-4e1e-a053-cc80acb64d50",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "createFromText",
        "content": "={{ $json.mensagens }}",
        "name": "={{ $('Loop Over Items').item.json.telefone }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1Clf0lkw9AzZZCwwUcr-L7_J9_h0pFstY",
          "mode": "list",
          "cachedResultName": "Gustavo",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1Clf0lkw9AzZZCwwUcr-L7_J9_h0pFstY"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2260,
        360
      ],
      "id": "74301abd-93aa-4386-8333-9bb3eeb8b22a",
      "name": "Google Drive1",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "HfqNLATIEzSePrSy",
          "name": "[SIMPLEWORK]Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Transformando e salvando no google drive\n\n",
        "height": 680,
        "width": 1320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1080,
        160
      ],
      "id": "327fb8a7-1e0e-458a-9e40-593df1f30279",
      "name": "Sticky Note1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        1200,
        300
      ],
      "id": "cb1bb4b1-b1aa-4f4b-b52f-30c52f111e48",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "jsCode": "// Criar array de 1 a 5\nconst items = [];\nfor (let i = 1; i <= 5; i++) {\n  items.push({ value: i });\n}\n\n// Importante: retorne um array de objetos, não um objeto com array\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        20,
        -80
      ],
      "id": "ddebada1-4079-4bf3-bcbc-98879caed65c",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        240,
        -80
      ],
      "id": "6d2bfc19-ab65-4df2-8f02-61a5b36beecf",
      "name": "Loop Over Items2"
    }
  ],
  "pinData": {},
  "connections": {
    "Split Out": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request - Contatos": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request - Mensages": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        []
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        []
      ]
    },
    "Postgres3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Google Drive1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request - Mensages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9ae443b8-d3f9-4c9c-9f26-60876e032d18",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e78b4fcd0d19076a6ee572574407dbe618e0363f1c045b3c6c7549a67fe38620"
  },
  "id": "9FWRJNZ1PnJutNvc",
  "tags": []
}