{
  "name": "Gustavo_Aula_3_v2",
  "nodes": [
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        440,
        80
      ],
      "id": "9b246c60-e0a1-4a60-be1f-601dd846d2ed",
      "name": "Split Out"
    },
    {
      "parameters": {
        "content": "## Extração, Transformação e Load\n",
        "height": 680,
        "width": 1080
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        -100
      ],
      "id": "e8b0ab2a-8449-4e2b-8ed0-7b14b9f0add5",
      "name": "Sticky Note"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1100,
        880
      ],
      "id": "ecaed0cc-4bd7-403f-9db2-8a2a5ef67c92",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "url": "https://stedileadvocacia.digisac.co/api/v1/contacts",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "perPage",
              "value": "20000"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer TIREI - N SEI SE PRECISAVA"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        80
      ],
      "id": "65017d49-a758-4e01-aa96-5a9829490dcf",
      "name": "HTTP Request - Contatos"
    },
    {
      "parameters": {
        "url": "https://stedileadvocacia.digisac.co/api/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "perPage",
              "value": "2000"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer TIREI - N SEI SE PRECISAVA"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "pagination": {
            "pagination": {
              "parameters": {
                "parameters": [
                  {
                    "name": "page",
                    "value": "={{ $response.body.currentPage +1 }}"
                  }
                ]
              },
              "limitPagesFetched": true,
              "maxRequests": 1
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        140,
        320
      ],
      "id": "ec723b1f-dec0-4d02-b5da-fd7a5bce773c",
      "name": "HTTP Request - Mensages"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        440,
        320
      ],
      "id": "ba16c1fb-9e3f-427a-be26-17afcfb6b156",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "gustavo_contatos",
          "mode": "list",
          "cachedResultName": "gustavo_contatos"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "block": false,
            "id": "={{ $json.id }}",
            "note": "={{ $json.note }}",
            "last_message_at": "={{ $json.lastMessageAt }}",
            "created_at": "={{ $json.createdAt }}",
            "id_from_service": "={{ $json.idFromService }}",
            "name": "={{ $json.name }}",
            "internal_name": "={{ $json.internalName }}",
            "alternative_name": "={{ $json.alternativeName }}",
            "phone_number": "={{ $json.data.number }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "note",
              "displayName": "note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_message_at",
              "displayName": "last_message_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "block",
              "displayName": "block",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "id_from_service",
              "displayName": "id_from_service",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "internal_name",
              "displayName": "internal_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "alternative_name",
              "displayName": "alternative_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "phone_number",
              "displayName": "phone_number",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        820,
        80
      ],
      "id": "07b89776-1512-4702-9b40-47e700dc43fb",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "mJjgVF406CLV9KYA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "gustavo_mensagens",
          "mode": "list",
          "cachedResultName": "gustavo_mensagens"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "is_from_me": "={{ $json.isFromMe }}",
            "sent": "={{ $json.sent }}",
            "is_from_bot": "={{ $json.isFromBot }}",
            "is_comment": "={{ $json.isComment }}",
            "id": "={{ $json.id }}",
            "type": "={{ $json.type }}",
            "timestamp": "={{ $json.timestamp }}",
            "text": "={{ $json.text }}",
            "contact_id": "={{ $json.contactId }}",
            "from_id": "={{ $json.fromId }}",
            "service_id": "={{ $json.serviceId }}",
            "created_at": "={{ $json.createdAt }}",
            "updated_at": "={{ $json.updatedAt }}",
            "quoted_message_id": "={{ $json.quotedMessage }}",
            "files": "={{ $json.files }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "is_from_me",
              "displayName": "is_from_me",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "sent",
              "displayName": "sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "timestamp",
              "displayName": "timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "from_id",
              "displayName": "from_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "service_id",
              "displayName": "service_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "quoted_message_id",
              "displayName": "quoted_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "files",
              "displayName": "files",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": false
            },
            {
              "id": "is_from_bot",
              "displayName": "is_from_bot",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "is_comment",
              "displayName": "is_comment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        820,
        320
      ],
      "id": "137bcc34-e6e8-4eef-8e32-5e7af40f2dbd",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "mJjgVF406CLV9KYA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    c.id AS id_usuario,\n    REGEXP_REPLACE(c.name, '[^a-zA-Z0-9áàâãéèêíìîóòôõúùûçÁÀÂÃÉÈÊÍÌÎÓÒÔÕÚÙÛÇ\\s]', '', 'g') AS nome_usuario,\n    c.phone_number AS telefone,\n    m.text AS mensagem,\n    m.timestamp AS data_hora,\n    CASE \n        WHEN m.is_from_me THEN 'Enviada' \n        ELSE 'Recebida' \n    END AS tipo_mensagem\nFROM \n    gustavo_contatos c\nJOIN \n    gustavo_mensagens m ON c.id = m.contact_id\nWHERE \n    c.block = FALSE\nORDER BY \n    c.name DESC,\n    m.timestamp ASC;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1400,
        1720
      ],
      "id": "82c2aec9-4322-401e-a378-9092393d7178",
      "name": "Postgres2"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    c.id AS id_usuario,\n    REGEXP_REPLACE(c.name, '[^a-zA-Z0-9áàâãéèêíìîóòôõúùûçÁÀÂÃÉÈÊÍÌÎÓÒÔÕÚÙÛÇ\\s]', '', 'g') AS nome_usuario,\n    c.phone_number AS telefone,\n    JSON_AGG(\n        JSON_BUILD_OBJECT(\n            'mensagem', m.text,\n            'data_hora', m.timestamp,\n            'tipo', CASE WHEN m.is_from_me THEN 'Enviada' ELSE 'Recebida' END\n        ) ORDER BY m.timestamp ASC\n    ) AS mensagens\nFROM \n    gustavo_contatos c\nLEFT JOIN \n    gustavo_mensagens m ON c.id = m.contact_id\nWHERE \n    c.block = FALSE\nGROUP BY \n    c.id, c.name, c.phone_number\nORDER BY \n    nome_usuario ASC LIMIT 2;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1400,
        1360
      ],
      "id": "bd3207cd-82be-4c69-a387-e15a974edf98",
      "name": "Postgres3"
    },
    {
      "parameters": {
        "resource": "folder",
        "name": "={{ $json.telefone }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1Clf0lkw9AzZZCwwUcr-L7_J9_h0pFstY",
          "mode": "list",
          "cachedResultName": "Gustavo",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1Clf0lkw9AzZZCwwUcr-L7_J9_h0pFstY"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2040,
        1380
      ],
      "id": "86e4582e-e2e5-4ed3-b9cb-5c8f56fb6536",
      "name": "Google Drive"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1720,
        1360
      ],
      "id": "0eb0e383-f4e0-42c7-ac31-d9f269f3ae19",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1700,
        1700
      ],
      "id": "3456151a-3e1b-46f3-a4b7-d69cdc487478",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "operation": "createFromText",
        "content": "={{ $json.mensagens[0].tipo }}",
        "name": "={{ $json.telefone }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1Clf0lkw9AzZZCwwUcr-L7_J9_h0pFstY",
          "mode": "list",
          "cachedResultName": "Gustavo",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1Clf0lkw9AzZZCwwUcr-L7_J9_h0pFstY"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2000,
        1720
      ],
      "id": "2f12e7ec-c948-4832-95ca-e8056b507afd",
      "name": "Google Drive1"
    },
    {
      "parameters": {
        "content": "## Transformando e salvando no google drive\n\n",
        "height": 680,
        "width": 1320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        880,
        1240
      ],
      "id": "f604be5a-6a14-4f96-8af3-dfac44fe6307",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "url": "https://stedileadvocacia.digisac.co/api/v1/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "perPage",
              "value": "2000"
            },
            {
              "name": "page",
              "value": "={{ $json.page }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer TIREI - N SEI SE PRECISAVA"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -500,
        880
      ],
      "id": "d385dca9-2441-42bb-94a5-4ef8ae9ac11c",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -140,
        880
      ],
      "id": "af820c5f-9ab1-4d41-a3ec-13656ecdac89",
      "name": "Split Out2"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "gustavo_mensagens",
          "mode": "list",
          "cachedResultName": "gustavo_mensagens"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "is_from_me": "={{ $json.isFromMe }}",
            "sent": "={{ $json.sent }}",
            "is_from_bot": "={{ $json.isFromBot }}",
            "is_comment": "={{ $json.isComment }}",
            "id": "={{ $json.id }}",
            "type": "={{ $json.type }}",
            "timestamp": "={{ $json.timestamp }}",
            "text": "={{ $json.text }}",
            "contact_id": "={{ $json.contactId }}",
            "from_id": "={{ $json.fromId }}",
            "service_id": "={{ $json.serviceId }}",
            "created_at": "={{ $json.createdAt }}",
            "updated_at": "={{ $json.updatedAt }}",
            "quoted_message_id": "={{ $json.quotedMessageId }}",
            "files": "={{ $json.files }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "is_from_me",
              "displayName": "is_from_me",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "sent",
              "displayName": "sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "timestamp",
              "displayName": "timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "from_id",
              "displayName": "from_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "service_id",
              "displayName": "service_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "quoted_message_id",
              "displayName": "quoted_message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "files",
              "displayName": "files",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": false
            },
            {
              "id": "is_from_bot",
              "displayName": "is_from_bot",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "is_comment",
              "displayName": "is_comment",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        80,
        740
      ],
      "id": "c2e6cd33-d953-48f7-8f23-1dcd756f92e5",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "mJjgVF406CLV9KYA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "afdccce6-71d8-4663-940d-96a20d708308",
              "leftValue": "={{ $('HTTP Request').item.json.currentPage }}",
              "rightValue": "={{ $('HTTP Request').item.json.lastPage }}",
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        280,
        880
      ],
      "id": "02d3fd24-aa99-4eed-b151-8c82250b6ca2",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        500,
        900
      ],
      "id": "d6f3e0ae-ac7c-4960-9d79-e931a4691791",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5d375237-004a-4cf3-8f68-d592322f24f5",
              "name": "page",
              "value": "={{ Number($('Seta variavel Page').item.json.page) + 1 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        440,
        1120
      ],
      "id": "b2f69ac0-2833-44f1-80a3-3261b2ee3e86",
      "name": "Incrementar Page"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1720,
        280
      ],
      "id": "6a145707-abf2-48c4-a449-c43ca543897c",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        1940,
        280
      ],
      "id": "d831a667-5260-495a-84a7-fe206a9a4e6d"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "df96d50e-433a-4e21-9d5a-40288a756fc7",
              "name": "page",
              "value": "1",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -840,
        880
      ],
      "id": "c5903059-45b3-47b0-941e-a4dce158b756",
      "name": "Seta variavel Page"
    }
  ],
  "pinData": {},
  "connections": {
    "Split Out": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Seta variavel Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request - Contatos": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request - Mensages": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Google Drive1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres4": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Incrementar Page",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Incrementar Page": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Seta variavel Page": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "17958057-fd1f-4248-b1b1-ceb750194ecd",
  "meta": {
    "instanceId": "1fed09111b4a39d4afdfaed3a3d46b80fa6a46fc5be1ae5c738f03c01d7a0222"
  },
  "id": "oIDa4uJxuhUsPOIw",
  "tags": []
}
